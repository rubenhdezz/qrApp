{"version":3,"file":"src_app_user_user_module_ts.js","mappings":"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","sources":["./src/app/user/user-routing.module.ts","./src/app/user/user.module.ts","./src/app/user/user.page.ts","./node_modules/ng-qrcode/fesm2015/ng-qrcode.mjs"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UserPage } from './user.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UserPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UserPageRoutingModule } from './user-routing.module';\n\nimport { headerModule } from '../header/header.module';\nimport { NgxQRCodeModule } from '@techiediaries/ngx-qrcode';\nimport { QrCodeModule } from 'ng-qrcode';\nimport { UserPage } from './user.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    UserPageRoutingModule,\n    headerModule,\n    NgxQRCodeModule,\n    QrCodeModule,\n    ReactiveFormsModule\n  ],\n  declarations: [UserPage]\n})\nexport class UserPageModule {}\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { Subscription } from \"rxjs\";\nimport {\n  NgxQrcodeElementTypes,\n  NgxQrcodeErrorCorrectionLevels,\n} from \"@techiediaries/ngx-qrcode\";\nimport { AppService } from \"src/http/app.service\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\n\n@Component({\n  selector: \"app-user\",\n  templateUrl: \"./user.page.html\",\n  styleUrls: [\"./user.page.scss\"],\n})\nexport class UserPage implements OnInit, OnDestroy {\n  appSubscription: Subscription;\n  previousUrl: string;\n  collabForm: FormGroup = this.formBuilder.group({\n    observation: [\"\", Validators.required],\n  });\n\n  elementType = NgxQrcodeElementTypes.URL;\n  correctionLevel = NgxQrcodeErrorCorrectionLevels.HIGH;\n\n  constructor(\n    private appService: AppService,\n    private formBuilder: FormBuilder\n  ) {}\n\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.collabForm.controls;\n  }\n\n  ngOnInit() {\n    this.appSubscription = this.appService.previousUrl.subscribe((url) => {\n      this.previousUrl = url;\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.appSubscription?.unsubscribe();\n  }\n}\n","import * as i0 from '@angular/core';\nimport { isDevMode, Directive, Input, Component, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { __awaiter } from 'tslib';\nimport qrcode from 'qrcode';\n\nconst validColorRegex = /^#(?:[0-9a-fA-F]{3,4}){1,2}$/;\nclass QrCodeDirective {\n    constructor(viewContainerRef) {\n        this.viewContainerRef = viewContainerRef;\n        // eslint-disable-next-line @angular-eslint/no-input-rename\n        this.errorCorrectionLevel = QrCodeDirective.DEFAULT_ERROR_CORRECTION_LEVEL;\n        this.darkColor = \"#000000FF\";\n        this.lightColor = \"#FFFFFFFF\";\n        // eslint-disable-next-line @angular-eslint/no-input-rename\n        this.margin = 16;\n    }\n    ngOnChanges() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.value) {\n                return;\n            }\n            if (this.version && this.version > 40) {\n                console.warn(\"[qrCode] max version is 40, clamping\");\n                this.version = 40;\n            }\n            else if (this.version && this.version < 1) {\n                console.warn(\"[qrCode] min version is 1, clamping\");\n                this.version = 1;\n            }\n            else if (this.version !== undefined && isNaN(this.version)) {\n                console.warn(\"[qrCode] version should be set to a number, defaulting to auto\");\n                this.version = undefined;\n            }\n            const canvas = this.viewContainerRef.element.nativeElement;\n            if (!canvas) {\n                // native element not available on server side rendering\n                return;\n            }\n            const context = canvas.getContext(\"2d\");\n            if (context) {\n                context.clearRect(0, 0, context.canvas.width, context.canvas.height);\n            }\n            const errorCorrectionLevel = (_a = this.errorCorrectionLevel) !== null && _a !== void 0 ? _a : QrCodeDirective.DEFAULT_ERROR_CORRECTION_LEVEL;\n            const dark = validColorRegex.test(this.darkColor) ? this.darkColor : undefined;\n            const light = validColorRegex.test(this.lightColor) ? this.lightColor : undefined;\n            if (isDevMode()) {\n                if (!dark && this.darkColor) {\n                    console.error(\"[ng-qrcode] darkColor set to invalid value, must be RGBA hex color string, eg: #3050A1FF\");\n                }\n                if (!light && this.lightColor) {\n                    console.error(\"[ng-qrcode] lightColor set to invalid value, must be RGBA hex color string, eg: #3050A130\");\n                }\n            }\n            yield qrcode\n                .toCanvas(canvas, this.value, {\n                version: this.version,\n                errorCorrectionLevel,\n                width: this.width,\n                margin: this.margin,\n                color: {\n                    dark,\n                    light,\n                },\n            });\n            const centerImageSrc = this.centerImageSrc;\n            const centerImageWidth = getIntOrDefault(this.centerImageWidth, QrCodeDirective.DEFAULT_CENTER_IMAGE_SIZE);\n            const centerImageHeight = getIntOrDefault(this.centerImageHeight, QrCodeDirective.DEFAULT_CENTER_IMAGE_SIZE);\n            if (centerImageSrc && context) {\n                if (!this.centerImage) {\n                    this.centerImage = new Image(centerImageWidth, centerImageHeight);\n                }\n                if (centerImageSrc !== ((_b = this.centerImage) === null || _b === void 0 ? void 0 : _b.src)) {\n                    this.centerImage.src = centerImageSrc;\n                }\n                if (centerImageWidth !== this.centerImage.width) {\n                    this.centerImage.width = centerImageWidth;\n                }\n                if (centerImageHeight !== this.centerImage.height) {\n                    this.centerImage.height = centerImageHeight;\n                }\n                const centerImage = this.centerImage;\n                centerImage.onload = () => {\n                    context.drawImage(centerImage, canvas.width / 2 - centerImageWidth / 2, canvas.height / 2 - centerImageHeight / 2, centerImageWidth, centerImageHeight);\n                };\n            }\n        });\n    }\n}\nQrCodeDirective.DEFAULT_ERROR_CORRECTION_LEVEL = \"M\";\nQrCodeDirective.DEFAULT_CENTER_IMAGE_SIZE = 40;\nQrCodeDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: QrCodeDirective, deps: [{ token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Directive });\nQrCodeDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: QrCodeDirective, selector: \"canvas[qrCode]\", inputs: { value: [\"qrCode\", \"value\"], version: [\"qrCodeVersion\", \"version\"], errorCorrectionLevel: [\"qrCodeErrorCorrectionLevel\", \"errorCorrectionLevel\"], width: \"width\", height: \"height\", darkColor: \"darkColor\", lightColor: \"lightColor\", centerImageSrc: [\"qrCodeCenterImageSrc\", \"centerImageSrc\"], centerImageWidth: [\"qrCodeCenterImageWidth\", \"centerImageWidth\"], centerImageHeight: [\"qrCodeCenterImageHeight\", \"centerImageHeight\"], margin: [\"qrCodeMargin\", \"margin\"] }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: QrCodeDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    // eslint-disable-next-line @angular-eslint/directive-selector\n                    selector: `canvas[qrCode]`,\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }]; }, propDecorators: { value: [{\n                type: Input,\n                args: [\"qrCode\"]\n            }], version: [{\n                type: Input,\n                args: [\"qrCodeVersion\"]\n            }], errorCorrectionLevel: [{\n                type: Input,\n                args: [\"qrCodeErrorCorrectionLevel\"]\n            }], width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], darkColor: [{\n                type: Input\n            }], lightColor: [{\n                type: Input\n            }], centerImageSrc: [{\n                type: Input,\n                args: [\"qrCodeCenterImageSrc\"]\n            }], centerImageWidth: [{\n                type: Input,\n                args: [\"qrCodeCenterImageWidth\"]\n            }], centerImageHeight: [{\n                type: Input,\n                args: [\"qrCodeCenterImageHeight\"]\n            }], margin: [{\n                type: Input,\n                args: [\"qrCodeMargin\"]\n            }] } });\nfunction getIntOrDefault(value, defaultValue) {\n    if (value === undefined || value === \"\") {\n        return defaultValue;\n    }\n    if (typeof value === \"string\") {\n        return parseInt(value, 10);\n    }\n    return value;\n}\n\nclass QrCodeComponent {\n}\nQrCodeComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: QrCodeComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nQrCodeComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.2\", type: QrCodeComponent, selector: \"qr-code\", inputs: { value: \"value\", size: \"size\", darkColor: \"darkColor\", lightColor: \"lightColor\", errorCorrectionLevel: \"errorCorrectionLevel\", centerImageSrc: \"centerImageSrc\", centerImageSize: \"centerImageSize\", margin: \"margin\" }, ngImport: i0, template: `\n    <canvas *ngIf=\"value\"\n            [qrCode]=\"value\"\n            [qrCodeErrorCorrectionLevel]=\"errorCorrectionLevel\"\n            [qrCodeCenterImageSrc]=\"centerImageSrc\"\n            [qrCodeCenterImageWidth]=\"centerImageSize\"\n            [qrCodeCenterImageHeight]=\"centerImageSize\"\n            [qrCodeMargin]=\"margin\"\n            [width]=\"size\"\n            [height]=\"size\"\n            [darkColor]=\"darkColor\"\n            [lightColor]=\"lightColor\"\n    >\n    </canvas>\n  `, isInline: true, directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: QrCodeDirective, selector: \"canvas[qrCode]\", inputs: [\"qrCode\", \"qrCodeVersion\", \"qrCodeErrorCorrectionLevel\", \"width\", \"height\", \"darkColor\", \"lightColor\", \"qrCodeCenterImageSrc\", \"qrCodeCenterImageWidth\", \"qrCodeCenterImageHeight\", \"qrCodeMargin\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: QrCodeComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"qr-code\",\n                    template: `\n    <canvas *ngIf=\"value\"\n            [qrCode]=\"value\"\n            [qrCodeErrorCorrectionLevel]=\"errorCorrectionLevel\"\n            [qrCodeCenterImageSrc]=\"centerImageSrc\"\n            [qrCodeCenterImageWidth]=\"centerImageSize\"\n            [qrCodeCenterImageHeight]=\"centerImageSize\"\n            [qrCodeMargin]=\"margin\"\n            [width]=\"size\"\n            [height]=\"size\"\n            [darkColor]=\"darkColor\"\n            [lightColor]=\"lightColor\"\n    >\n    </canvas>\n  `,\n                    styles: [],\n                }]\n        }], propDecorators: { value: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], darkColor: [{\n                type: Input\n            }], lightColor: [{\n                type: Input\n            }], errorCorrectionLevel: [{\n                type: Input\n            }], centerImageSrc: [{\n                type: Input\n            }], centerImageSize: [{\n                type: Input\n            }], margin: [{\n                type: Input\n            }] } });\n\nclass QrCodeModule {\n}\nQrCodeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: QrCodeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nQrCodeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: QrCodeModule, declarations: [QrCodeComponent,\n        QrCodeDirective], imports: [CommonModule], exports: [QrCodeComponent,\n        QrCodeDirective] });\nQrCodeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: QrCodeModule, imports: [[\n            CommonModule,\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: QrCodeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        QrCodeComponent,\n                        QrCodeDirective,\n                    ],\n                    imports: [\n                        CommonModule,\n                    ],\n                    exports: [\n                        QrCodeComponent,\n                        QrCodeDirective,\n                    ],\n                }]\n        }] });\n\n/*\n * Public API Surface of ng-qrcode\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { QrCodeComponent, QrCodeDirective, QrCodeModule };\n"],"names":["i0","isDevMode","Directive","Input","Component","NgModule","i1","CommonModule","__awaiter","qrcode","validColorRegex","QrCodeDirective","constructor","viewContainerRef","errorCorrectionLevel","DEFAULT_ERROR_CORRECTION_LEVEL","darkColor","lightColor","margin","ngOnChanges","_a","_b","value","version","console","warn","undefined","isNaN","canvas","element","nativeElement","context","getContext","clearRect","width","height","dark","test","light","error","toCanvas","color","centerImageSrc","centerImageWidth","getIntOrDefault","DEFAULT_CENTER_IMAGE_SIZE","centerImageHeight","centerImage","Image","src","onload","drawImage","ɵfac","ViewContainerRef","ɵdir","type","args","selector","defaultValue","parseInt","QrCodeComponent","ɵcmp","NgIf","template","styles","size","centerImageSize","QrCodeModule","ɵmod","ɵinj","declarations","imports","exports"],"sourceRoot":"webpack:///"}